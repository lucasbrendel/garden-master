var N=null,E="",T="t",U="u",searchIndex={};
var r_aa="green_thumb",r_ba="connection",r_ca="naivedate",r_da="green_thumb::db",r_ea="self",r_fa="result",r_ga="plant",r_ha="string",r_ia="green_thumb::db::crop",r_ja="try_from",r_ka="borrow",r_la="type_id",r_ma="typeid",r_na="borrow_mut",r_oa="try_into",r_pa="from",r_qa="green_thumb::db::plant",r_ra="into",r_sa="green_thumb::db::task",r_ta="planttype",r_ua="task",r_va="bool",r_wa="formatter",r_xa="DataMgr",r_ya="Plant",r_za="PlantType";

searchIndex[r_aa]={"doc":E,"i":[[5,"main",r_aa,E,N,[[]]],[0,"logging",E,E,N,N],[5,"logging_init","green_thumb::logging","Basic abstraction for initializing logging. Currently…",N,[[]]],[0,"db",r_aa,E,N,N],[3,r_xa,r_da,E,N,N],[12,"conn",E,E,0,N],[0,"crop",E,E,N,N],[3,"Crop",r_ia,"Tracking the growth and harvest of a specific plant",N,N],[12,"num_plants",E,"Number of plants sown",1,N],[12,"date_planted",E,"The date that the plants were planted",1,N],[12,"plant_id",E,"The id of the plant sown",1,N],[12,"id",E,"Unique id for the crop",1,N],[11,"new",E,"Create a new crop instance",1,[[[r_ba],["i64"],["u32"],[r_ca]],[r_ea]]],[11,"planned_harvest_date",E,"Provides the ideal harvest date based on planting date and…",1,[[[r_ea],[r_ba]],[r_ca]]],[0,r_ga,r_da,"The design behind the plant module is to act as the main…",N,N],[3,r_ya,r_qa,"Standard type to define all things to grow",N,N],[12,"id",E,E,2,N],[12,"name",E,"Name of a plant.",2,N],[12,"plant_type",E,"Seasonal type of plant",2,N],[12,"zones",E,"Growing zones defined by USDA that a plant can survive in.…",2,N],[12,"notes",E,"Any description or textual things to track about the plant.",2,N],[12,"days_to_maturity",E,"Number of days from planting until germination occurs",2,N],[4,r_za,E,"Seasonal variety types of plants",N,N],[13,"Annual",E,"Plant has one growing season and needs to be replanted…",3,N],[13,"Perennial",E,"Plant survives over multiple growing seasons.",3,N],[17,"_IMPL_SERIALIZE_FOR_PlantType",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_PlantType",E,E,N,N],[11,"new",E,"Create a new plant type",2,[[[r_ba],[r_ha],["i64"],[r_ta]],[r_ea]]],[11,"get_plants",E,"Access all defined plants",2,[[[r_ba]],[r_fa,["vec"]]]],[11,"get_plant_by_id",E,"Obtain a plant based on the database id provided",2,[[[r_ba],["i64"]],[r_fa,[r_ga]]]],[0,r_ua,r_da,E,N,N],[3,"Task",r_sa,"Standard task for things that need to be completed",N,N],[12,"id",E,"Database unique id to identify instance",4,N],[12,"text",E,"Task description of what needs to be done",4,N],[12,"is_completed",E,"Denote that task has been completed",4,N],[12,"completed_date",E,"Date and Time that task is completed",4,N],[11,"new",E,"Create a new instance of a Task",4,[[[r_ba],[r_ha]],[r_ea]]],[11,"get_completed",E,"Get the completed state",4,[[[r_ea]],[r_va]]],[11,"set_completed",E,"Mark a task as completed",4,[[[r_ea],[r_ba]]]],[11,"get_completed_date",E,"Get the date that the task was completed. This cannot be…",4,[[[r_ea]],["datetime",["local"]]]],[11,"get_text",E,"Get Task text field",4,[[[r_ea]],[r_ha]]],[11,"set_text",E,"Update Task text field",4,[[[r_ea],[r_ba],[r_ha]]]],[11,"get_tasks",E,"Access all tasks",4,[[[r_ba]],[r_fa,["vec"]]]],[11,"get_task_by_id",E,E,4,[[[r_ba],["i64"]],[r_fa,[r_ua]]]],[11,"new",r_da,E,0,[[[r_ha]],[r_ea]]],[11,r_pa,E,E,0,[[[T]],[T]]],[11,r_ra,E,E,0,[[[r_ea]],[U]]],[11,r_ja,E,E,0,[[[U]],[r_fa]]],[11,r_ka,E,E,0,[[[r_ea]],[T]]],[11,r_la,E,E,0,[[[r_ea]],[r_ma]]],[11,r_na,E,E,0,[[[r_ea]],[T]]],[11,r_oa,E,E,0,[[[r_ea]],[r_fa]]],[11,r_pa,r_ia,E,1,[[[T]],[T]]],[11,r_ra,E,E,1,[[[r_ea]],[U]]],[11,r_ja,E,E,1,[[[U]],[r_fa]]],[11,r_ka,E,E,1,[[[r_ea]],[T]]],[11,r_la,E,E,1,[[[r_ea]],[r_ma]]],[11,r_na,E,E,1,[[[r_ea]],[T]]],[11,r_oa,E,E,1,[[[r_ea]],[r_fa]]],[11,r_pa,r_qa,E,2,[[[T]],[T]]],[11,r_ra,E,E,2,[[[r_ea]],[U]]],[11,r_ja,E,E,2,[[[U]],[r_fa]]],[11,r_ka,E,E,2,[[[r_ea]],[T]]],[11,r_la,E,E,2,[[[r_ea]],[r_ma]]],[11,r_na,E,E,2,[[[r_ea]],[T]]],[11,r_oa,E,E,2,[[[r_ea]],[r_fa]]],[11,"to_string",E,E,3,[[[r_ea]],[r_ha]]],[11,r_pa,E,E,3,[[[T]],[T]]],[11,r_ra,E,E,3,[[[r_ea]],[U]]],[11,r_ja,E,E,3,[[[U]],[r_fa]]],[11,r_ka,E,E,3,[[[r_ea]],[T]]],[11,r_la,E,E,3,[[[r_ea]],[r_ma]]],[11,r_na,E,E,3,[[[r_ea]],[T]]],[11,r_oa,E,E,3,[[[r_ea]],[r_fa]]],[11,r_pa,r_sa,E,4,[[[T]],[T]]],[11,r_ra,E,E,4,[[[r_ea]],[U]]],[11,"to_owned",E,E,4,[[[r_ea]],[T]]],[11,"clone_into",E,E,4,N],[11,r_ja,E,E,4,[[[U]],[r_fa]]],[11,r_ka,E,E,4,[[[r_ea]],[T]]],[11,r_la,E,E,4,[[[r_ea]],[r_ma]]],[11,r_na,E,E,4,[[[r_ea]],[T]]],[11,r_oa,E,E,4,[[[r_ea]],[r_fa]]],[11,"eq",r_qa,E,3,[[[r_ea],[r_ta]],[r_va]]],[11,"eq",r_sa,E,4,[[[r_ea],[r_ua]],[r_va]]],[11,"ne",E,E,4,[[[r_ea],[r_ua]],[r_va]]],[11,"clone",E,E,4,[[[r_ea]],[r_ua]]],[11,"fmt",r_qa,E,3,[[[r_ea],[r_wa]],[r_fa,["error"]]]],[11,"fmt",E,E,2,[[[r_ea],[r_wa]],[r_fa]]],[11,"fmt",E,E,3,[[[r_ea],[r_wa]],[r_fa]]],[11,"fmt",r_sa,E,4,[[[r_ea],[r_wa]],[r_fa]]],[11,"from_str",r_qa,E,3,[[["str"]],[r_fa,[r_ta]]]],[11,"column_result",E,E,3,[[["valueref"]],["fromsqlresult"]]],[11,"to_sql",E,E,3,[[[r_ea]],[r_fa,["tosqloutput"]]]],[11,"serialize",E,E,3,[[[r_ea],["__s"]],[r_fa]]],[11,"deserialize",E,E,3,[[["__d"]],[r_fa]]],[11,"as_static",E,E,3,[[[r_ea]],["str"]]]],"p":[[3,r_xa],[3,"Crop"],[3,r_ya],[4,r_za],[3,"Task"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);